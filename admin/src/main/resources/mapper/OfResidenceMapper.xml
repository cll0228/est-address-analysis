<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lezhi.address.admin.mapper.OfResidenceMapper" >
  <resultMap id="BaseResultMap" type="com.lezhi.address.admin.pojo.OfResidence" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="delete_road_lane_id" property="deleteRoadLaneId" jdbcType="VARCHAR" />
    <result column="building_count" property="buildingCount" jdbcType="INTEGER" />
    <result column="house_count" property="houseCount" jdbcType="INTEGER" />
    <result column="residence_addr" property="residenceAddr" jdbcType="VARCHAR" />
    <result column="residence_name" property="residenceName" jdbcType="VARCHAR" />
    <result column="vp" property="vp" jdbcType="REAL" />
    <result column="gp" property="gp" jdbcType="REAL" />
    <result column="residence_type_id" property="residenceTypeId" jdbcType="INTEGER" />
    <result column="lat" property="lat" jdbcType="DECIMAL" />
    <result column="lon" property="lon" jdbcType="DECIMAL" />
    <result column="of_district_id" property="ofDistrictId" jdbcType="INTEGER" />
    <result column="of_town_id" property="ofTownId" jdbcType="INTEGER" />
    <result column="of_neighborhood_id" property="ofNeighborhoodId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="accomplish_date" property="accomplishDate" jdbcType="DATE" />
    <result column="delete_road_lane" property="deleteRoadLane" jdbcType="VARCHAR" />
    <result column="aliases" property="aliases" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="delete_lezhi_residence_id" property="deleteLezhiResidenceId" jdbcType="INTEGER" />
    <result column="delete_of_std_addr_id" property="deleteOfStdAddrId" jdbcType="INTEGER" />
    <result column="area" property="area" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, delete_road_lane_id, building_count, house_count, residence_addr, residence_name, 
    vp, gp, residence_type_id, lat, lon, of_district_id, of_town_id, of_neighborhood_id, 
    create_time, accomplish_date, delete_road_lane, aliases, parent_id, delete_lezhi_residence_id, 
    delete_of_std_addr_id, area
  </sql>
  <select id="selectResidenceByName" resultMap="BaseResultMap">
      SELECT  <include refid="Base_Column_List"></include>   FROM `of_residence` WHERE 	residence_name like '%${keyword}%';
  </select>
  
  <select id="selectResidenceDetailByResidenceId" resultType="com.lezhi.address.admin.pojo.OfResidence">
    SELECT
	a.id,
	a.modify_time modifyTime,
	group_concat(c.road_lane SEPARATOR ';') residenceAddr,
	a.residence_addr describeAddr,
	a.residence_name residenceName,
	a.aliases,
	a.of_district_id ofDistrictId,
	d.district_name districtNname,
	a.of_town_id ofTownId,
	e.town_name townName,
	a.building_count buildingCount,
	a.house_count houseCount,
	a.gp,
	a.vp,
	a.lon,
	a.lat,
	a.accomplish_date accomplishDate
	FROM
		ocn_address.of_residence a
	LEFT JOIN ocn_address.of_residence_road_lane_links b ON a.id = b.residence_id
	LEFT JOIN ocn_address.of_road_lane c ON b.road_lane_id = c.id
	LEFT JOIN ocn_address.of_district d ON a.of_district_id = d.district_id
	LEFT JOIN ocn_address.of_town e on a.of_town_id = e.town_id where a.id = #{residenceId}
	GROUP BY a.id
  </select>

  <select id="selectResiBoundaryById" resultType="com.lezhi.address.admin.pojo.ResidenceBoundary">
    SELECT
    b.id,
    b.baidu_lat baiduLat,
    b.baidu_lon baiduLon,
    b.of_residence_id ofResidenceId,
    re.lon resiLon,
    re.lat resiLat
    FROM
    `iwjw_residence_bound` b
    LEFT JOIN of_residence re ON b.of_residence_id = re.id
    WHERE
    re.id = #{residenceId}
  </select>

  <select id="selectOfResidenceCenter" resultType="com.lezhi.address.admin.pojo.ResidenceBoundary">
    SELECT
    lon resiLon,
    lat resiLat
    FROM
    of_residence
    WHERE
    id = #{residenceId}
  </select>
  
  <update id="updateOfResidenceInfo" parameterType="com.lezhi.address.admin.pojo.OfResidence">
        UPDATE `ocn_address`.`of_residence`
            SET
             `residence_name` = #{ofResidence.residenceName},
             `residence_addr` = #{ofResidence.residenceAddr},
             `modify_time` = now(),
             `house_count` = #{ofResidence.houseCount},
             `building_count` = #{ofResidence.buildingCount},
             `vp` = #{ofResidence.vp},
             `gp` = #{ofResidence.gp}
            WHERE
                (`id` = #{ofResidence.id});
    </update>

  <update id="updateOfResidenceCoordinate">
    UPDATE dazhongdianping.of_residence
    set baidu_lon=#{newLon}, baidu_lat=#{newLat}, modify_time=NOW()
    WHERE id = #{residenceId}
  </update>

</mapper>