<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lezhi.statistics.mapper.LogMapper">
	<select id="getDistrictResult" resultType="com.lezhi.statistics.pojo.LogGeneratorDistrict">
       SELECT
			a.channel channelNo,
			a.mac,
			a.`session`,
			(
				unix_timestamp(MAX(a.timestamp)) - unix_timestamp(MIN(a.timestamp))
			) * 10 totalTop,
			unix_timestamp(MIN(a.timestamp))
		begin
			,
			unix_timestamp(MAX(a.timestamp))
		end,
		 b.district_id districtId,
		 count(a.mac) pv
		FROM
			statistics.api_logs_shfctv a
		INNER JOIN statistics.mac_info b ON a.mac = b.mac
		WHERE
			a.`timestamp` &gt;= #{startTime}
		AND a.`timestamp` &lt;= #{endTime}
		GROUP BY
			a.mac,
			a.channel,
			a.`session`
    </select>
    
    <select id="getSpanResult" resultType="com.lezhi.statistics.pojo.LogGeneratorCountSpan">
        SELECT
			COUNT(*) count,
			unix_timestamp(#{startTime}) spanTime
		FROM
			statistics.api_logs_shfctv a
		WHERE
			a.`timestamp` &lt; #{startTime}
		AND a.`session` = #{session}
    </select>
    
    <insert id="insertSummaryDistrict">
        INSERT INTO statistics.channel_visit_summary_district (
			district_id,
			channel_no,
			mac,
			pv,
			begin_time,
			end_time,
			total_top
		)
		VALUES
			(#{logGeneratorDistrict.districtId},
			#{logGeneratorDistrict.channelNo},
			#{logGeneratorDistrict.mac},
			#{logGeneratorDistrict.pv},
			#{logGeneratorDistrict.beginTime},
			#{logGeneratorDistrict.endTime},
			#{logGeneratorDistrict.totalTop})
    </insert>
    
</mapper>