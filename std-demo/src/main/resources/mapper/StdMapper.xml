<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.address.mapper.StdMapper">
    <select id="getDistrictByRoad" resultType="java.lang.String">
        SELECT adname FROM ocn_address.sh_road_name_dic WHERE name = #{road};
    </select>
    <select id="getStdAddr" resultType="com.address.model.ReturnParam" parameterType="com.address.model.StdModel">
     <!-- SELECT
            district.district_name district,
            std_address.std_addr_id id,
            std_address.road_lane roadLane,
            std_address.addr_code addrCode,
            town.town_name street,
            COMMIT.neighborhood_name committe
        FROM
            ocn_address.of_std_address std_address
        LEFT JOIN ocn_address.of_district district ON std_address.of_district_id = district.district_id
        LEFT JOIN ocn_address.of_neighborhood COMMIT ON std_address.of_neighborhood_id = COMMIT.neighborhood_id
        LEFT JOIN ocn_address.of_town town ON std_address.of_town_id = town.town_id
        LEFT JOIN ocn_address.of_road_lane_links road_lane_links ON std_address.std_addr_id = road_lane_links.std_addr_id
        WHERE
            road_lane_links.road_lane_id in (
                SELECT
                    road_lane_id
                FROM
                    ocn_address.of_road_lane_match
                WHERE
                    lianjia_residence_name = #{model.residence}
                OR soufang_residence_name = #{model.residence}
                OR iwjw_residence_name = #{model.residence}
                OR centanet_residence_name = #{model.residence}
                OR fangjia_residence_name = #{model.residence}
                OR lezhi_residence_name = #{model.residence}
            ) -->
        SELECT std_address.building_no building,std_address.house_no houseNo,district.district_name district, std_address.std_addr_id id, std_address.road_lane roadLane, std_address.addr_code addrCode, town.town_name street, COMMIT.neighborhood_name committe 
		FROM ocn_address.of_std_address std_address 
		LEFT JOIN ocn_address.of_district district ON std_address.of_district_id = district.district_id 
		LEFT JOIN ocn_address.of_neighborhood COMMIT ON std_address.of_neighborhood_id = COMMIT.neighborhood_id 
		LEFT JOIN ocn_address.of_town town ON std_address.of_town_id = town.town_id 
		WHERE std_address.road_lane in 
		(SELECT road_lane FROM ocn_address.of_road_lane WHERE id in(
        SELECT road_lane_id FROM ocn_address.of_road_lane_match
		WHERE
                    lianjia_residence_name = #{model.residence}
                OR soufang_residence_name = #{model.residence}
                OR iwjw_residence_name = #{model.residence}
                OR centanet_residence_name = #{model.residence}
                OR fangjia_residence_name = #{model.residence}
                OR lezhi_residence_name = #{model.residence}
		 ))
        <if test="null != model.building">
            AND building_no = '${model.building}'
        </if>
        <if test="null != model.houseNum">
            AND house_no = '${model.houseNum}ход'
        </if>

        GROUP BY road_lane
    </select>

    <select id="getStdAddr1" resultType="com.address.model.ReturnParam" parameterType="com.address.model.StdModel">
        SELECT
        district.district_name district,
        town.town_name street,
        COMMIT.neighborhood_name committe,
        max(std_addr_id) id,
        addr_code addrCode,
        road_lane roadLane,
        building_no building,
        house_no houseNo
        FROM
        ocn_address.of_std_address std_address
        LEFT JOIN ocn_address.of_district district ON std_address.of_district_id = district.district_id
        LEFT JOIN ocn_address.of_neighborhood COMMIT ON std_address.of_neighborhood_id = COMMIT.neighborhood_id
        LEFT JOIN ocn_address.of_town town ON std_address.of_town_id = town.town_id
        WHERE 1=1
        <if test="null != model.road and null != model.lane">
            AND road_lane = '${model.road}${model.lane}'
        </if>
        <if test="null == model.road and null == model.lane">
            AND road_lane = '${model.residence}'
        </if>
        <if test="null != model.road and null == model.lane and null != model.building">
            AND road_lane = '${model.road}${model.building}'
        </if>
        <if test="null != model.building and null != model.lane">
            AND building_no = '${model.building}'
        </if>
        <if test="null == model.road and null == model.lane and null != model.building">
            AND building_no = '${model.building}'
        </if>
        <if test="null != model.houseNum">
            AND house_no = '${model.houseNum}ход'
        </if>
        <if test="null != model.road and null == model.houseNum and null == model.lane and null == model.building">
            AND road_lane = '${model.road}'
        </if>
    </select>

	<select id="selectAiHdNoChai" resultType="com.address.model.HouseDeal">
          SELECT DOOR_NAME as address,id FROM ocn_address.extract_success_1400_aihd limit 0,40000;
    </select>
    
    <select id="selectBillPlan" resultType="com.address.model.HouseDeal">
          select id,post_addr as address from ocn_address.bill_plan_distinct limit 4000001,4000000;
    </select>
    
    <select id="selectExtract" resultType="com.address.model.HouseDeal">
          SELECT DOOR_NAME as address,id FROM extract_success_1400_2 limit 3000001,4000000;
    </select>

    <select id="selectNoMappingHouseDeal" resultType="com.address.model.HouseDeal">
          SELECT * FROM sts.no_mapping_std_addr_deal_demo;
    </select>
    
    <select id="selectHouses" resultType="com.address.model.HouseDeal">
          SELECT address,id FROM mortgage_address.houses_unique;
    </select>
    
    <select id="selectOfHouse" resultType="com.address.model.OfHouse">
          select hdm.of_std_address_id stdAddrId,hd.room roomNo,hd.floor placeFloor,hd.area,hd.property_room roomNum,hd.property_parlor hallNum,hd.plane_type_id planeType,hd.property_type_id propertyType from sts.house_deal_unique_address hd left JOIN sts.house_deal_std_address_mapping hdm on hd.id = hdm.house_deal_id where hdm.id >1593384;
    </select>

	<select id="selectHouseDeal" resultType="com.address.model.HouseDeal">
          SELECT
			a.std_addr_id stdAddrId,b.house_deal_id id
		FROM
			ocn_address.of_house a left join sts.house_deal_std_address_mapping b on a.std_addr_id = b.of_std_address_id
		WHERE
			a.id &lt; 1778573
    </select>
    
    <select id="selectResidenceDetail" resultType="com.address.model.ResidenceDetail">
		SELECT res.id id,res.residence_name residenceName,res.aliases aliases,res.residence_addr residenceAddr,pt.PropertyType propertyType,res.accomplish_date accomplishDate,res.vp vp,res.gp gp,
		res.building_count buildingCount,res.house_count houseCount,GROUP_CONCAT(ht.type_name) houseType FROM ocn_address.of_residence res
		left join ocn_address.sh_property_type pt on res.property_type_id = pt.PropertyTypeID 
		left join ocn_address.house_type ht on ht.residence_id = res.id where res.residence_addr=#{roadLane} group by res.residence_name;
    </select>

    <update id="updateResult" parameterType="com.address.model.HouseDeal">
        UPDATE `sts`.`no_mapping_std_addr_deal_demo`
            SET
             `analy_addr` = #{deal.analyAddr},
             `std_addr_id` = #{deal.stdAddrId},
             `create_date` = now(),
             `no_mapping_type` = #{deal.noMappingType}
            WHERE
                (`id` = #{deal.id});
    </update>
    
    <insert id="updateMapping" parameterType="com.address.model.HouseDeal">
        INSERT INTO `sts`.`house_deal_std_address_mapping`
        (`of_std_address_id`,`house_deal_id`) VALUES(#{deal.stdAddrId},#{deal.id});
    </insert>
    
    <insert id="insertOuterAddress" parameterType="com.address.model.HouseDeal">
        INSERT INTO `ocn_address`.`of_outer_address_links`
        (`src_table`,`std_addr_id`,`src_table_id`) VALUES(#{deal.analyAddr},#{deal.stdAddrId},#{deal.id});
    </insert>
    
    <insert id="insertOfHouse" parameterType="com.address.model.OfHouse">
        INSERT INTO `ocn_address`.`of_house`
        (`room_no`,`place_floor`,`area`,`room_num`,`hall_num`,`plane_type`,`property_type`,`std_addr_id`) 
        VALUES(#{ofHouse.roomNo},#{ofHouse.placeFloor},#{ofHouse.area},#{ofHouse.roomNum},#{ofHouse.hallNum},#{ofHouse.planeType},#{ofHouse.propertyType},#{ofHouse.stdAddrId});
    </insert>
    
    <update id="updateAiHd" parameterType="com.address.model.HouseDeal">
        UPDATE `ocn_address`.`extract_success_1400_aihd`
            SET
             `building` = #{deal.building},
             `roomnum` = #{deal.room},
             `std_addr_id` = #{deal.stdAddrId},
             `no_mapping_type` = #{deal.noMappingType}
            WHERE
                (`id` = #{deal.id});
    </update>
    
    <update id="updateExtract" parameterType="com.address.model.HouseDeal">
        UPDATE `ocn_address`.`extract_success_1400_2`
            SET
             `building` = #{deal.building},
             `roomnum` = #{deal.room},
             `std_addr_id` = #{deal.stdAddrId},
             `no_mapping_type` = #{deal.noMappingType}
            WHERE
                (`id` = #{deal.id});
    </update>
    
    <update id="updateBillPlan" parameterType="com.address.model.HouseDeal">
        UPDATE `ocn_address`.`bill_plan_distinct`
            SET
             `building` = #{deal.building},
             `roomnum` = #{deal.room},
             `std_addr_id` = #{deal.stdAddrId},
             `no_mapping_type` = #{deal.noMappingType}
            WHERE
                (`id` = #{deal.id});
    </update>
    
    <update id="updateHouses" parameterType="com.address.model.HouseDeal">
        UPDATE `mortgage_address`.`houses_unique`
            SET
             `building` = #{deal.building},
             `roomnum` = #{deal.room},
             `extract_addr` = #{deal.residence},
             `std_addr_id` = #{deal.stdAddrId},
             `no_mapping_type` = #{deal.noMappingType}
            WHERE
                (`id` = #{deal.id});
    </update>

    <select id="getResidenceLonAndLat" resultType="com.address.model.ResidenceInfo">
        SELECT id as residenceId,residence_name, lon, lat FROM `ocn_address`.`of_residence` WHERE residence_addr = #{residenceAddr};
    </select>

    <select id="getTrafficList" resultType="com.address.model.PoiDetail">
        SELECT
        "ф║дщАЪ" poiKind,
        pd.sub_category_name categoryName,
        poi_name poiName,
        poi_addr poiAddr,
        calcDistance (
        #{lon},
        #{lat},
        p.baidu_lon,
        p.baidu_lat
        ) distance,
        baidu_lon baiduLon,
        baidu_lat baiduLat
        FROM
        df_estate_db_v2.sh_poi_2015 p,
        df_estate_db_v2.sh_poi_division pd
        WHERE p.poi_kind = pd.poi_kind
        and pd.category_name = "ф║дщАЪ"
        AND pd.is_available = 1
        and p.is_available = 1
        AND calcDistance (
        #{lon},
        #{lat},
        p.baidu_lon,
        p.baidu_lat
        )  &lt;  #{r}
    </select>



	<select id="getResidenceTradeAvgPriceList"
			resultType="com.address.model.PriceTrend">
		SELECT
		month as month,
		deal_avg_price_1st as dealAvgPrice1st,
		deal_count_1st as dealCount1st,
		deal_avg_price_2nd as dealAvgPrice2nd,
		deal_count_2nd as dealCount2nd
		FROM
		`df_estate_db_v2`.`sh_deal_trend_residence`
		WHERE
		month BETWEEN #{startMonth} AND #{endMonth}
		<if test="residenceId != null">
			AND residence_id = #{residenceId}
		</if>
	</select>

    <!-- хдйхЬ░хЫ╛ -->
    <select id="selectTdtAddress" resultType="com.address.model.HouseDeal">
        SELECT id,address FROM dazhongdianping.tdt_building_clearv1_201612 WHERE address IS NOT NULL AND residence_part is NULL ORDER BY id;
    </select>
    <update id="updateTdtResult" parameterType="com.address.model.HouseDeal">
        UPDATE `dazhongdianping`.`tdt_building_clearv1_201612`
        SET
        `residence_part` = #{deal.residence},
        `building_part` = #{deal.building}
        WHERE
        (`id` = #{deal.id});
    </update>
    <select id="selectResiBoundaryById" resultType="com.address.model.ResidenceBoundary">
        SELECT
            b.id,
            b.baidu_lat baiduLat,
            b.baidu_lon baiduLon,
            b.of_residence_id ofResidenceId
        FROM
            `iwjw_residence_bound` b
        LEFT JOIN of_residence_road_lane_links l ON b.of_residence_id = l.residence_id
        LEFT JOIN of_road_lane r ON l.road_lane_id = r.id
        WHERE
            r.road_lane = #{roadLan}
    </select>
    <select id="selectBuilding" resultType="com.address.model.OfBuilding">
        SELECT
            b.id,
            b.building_no buildingNo,
            b.house_count houseCount,
            b.baidu_lat baiduLat,
            b.baidu_lon baiduLon,
            b.total_floor totalFloor
        FROM
            of_building b
        LEFT JOIN of_residence_road_lane_links l ON b.residence_id = l.residence_id
        LEFT JOIN of_road_lane r ON l.road_lane_id = r.id
        WHERE
            r.road_lane = #{roadLan}
        AND building_no = #{buildingNo}
    </select>
</mapper>